## Git Push

OK，我们已经学过了如何从远程仓库获取更新并合并到本地的分支当中。这非常棒……但是我如何与大家分享**我的**成果呢？

嗯，上传自己分享内容与下载他人的分享刚好相反，那与 `git pull` 相反的命令是什么呢？`git push`！

`git push` 负责将**你的**变更上传到指定的远程仓库，并在远程仓库上合并你的新提交记录。一旦 `git push` 完成, 你的朋友们就可以从这个远程仓库下载你分享的成果了！

你可以将 `git push` 想象成发布你成果的命令。它有许多应用技巧，稍后我们会了解到，但是咱们还是先从基础的开始吧……

*注意 —— `git push` 不带任何参数时的行为与 Git 的一个名为 `push.default` 的配置有关。它的默认值取决于你正使用的 Git 的版本，但是在教程中我们使用的是 `upstream`。 这没什么太大的影响，但是在你的项目中进行推送之前，最好检查一下这个配置。*



分支有两种：

1. 本地分支
2. 远程分支
3. 如：本地的 main 分支，远程的 main 分支



当前的本地 main 分支与远程的 main 分支的状态不一致

![image-20220630144125287](06-Git-Push.assets/image-20220630144125287.png)

本地的记录推送到远程仓库后，本地 main 分支和远程 main 分支的状态同步，并且此时远程仓库的 main 分支也同步了

![image-20220630144342748](06-Git-Push.assets/image-20220630144342748.png)





## 任务

要完成本关，需要向远程仓库分享两个提交记录。拿出十二分精神吧，后面的课程还会更难哦！



## 实现流程

1. 在本地提交两个记录

此时本地 main 分支和远程 main 分支的状态不一致

![image-20220630144548386](06-Git-Push.assets/image-20220630144548386.png)

2. 推送本地仓库的数据到远程仓库

![image-20220630144637139](06-Git-Push.assets/image-20220630144637139.png)