1 file 命令
file file_name 查看文件的格式

2 nm 命令
nm file_name 查看文件的重定位情况, 列出未重定位的符号信息

3 ld 链接命令
ld kernel/main.o -Ttext 0xc0001500 -e main -o kernel/kernel.bin
# 在64位机器上链接 32 位程序要对 ld 命令添加参数 -m elf_i386
# eg: ld main.o -o main.bin -m elf_i386
# eg: ld ./main.o -Ttext 0xc0001500 -e main -o ./kernel.bin -m elf_i386
# -Ttext 指定运行的起始地址
# -e = -entry 给起始运行地址起个名字
# 链接器规定，默认只把名为_start的函数作为程序的入口地址，
# 即默认的entry symbol是_start，除非另行指定

4 ELF 文件
# ELF指的是Executable and Linkable Format，可执行链接格式
# ELF 包含三种类型的文件
# 1） 待重定位文件：还没有链接的半成品  2）共享目标文件   3） 可执行文件

# 生成 目标文件即可重定位文件 = file_name.o / file_name.out 文件 这里的 o=out
# 可执行文件 = 已经重定位完成的文件 = 链接完成的文件
# program header table -> program header 用于描述 程序头信息 等价于 段（segment）头信息
# 段是程序本身的组成部分
# section header tbale -> section header 用于描述 节头信息  
# ELF header -> 用于描述各种头 






 
